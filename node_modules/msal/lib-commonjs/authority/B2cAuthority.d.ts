import { Authority } from "./Authority";
import { AuthorityType } from "./Authority";
import { ITenantDiscoveryResponse } from "./ITenantDiscoveryResponse";
import TelemetryManager from "../telemetry/TelemetryManager";
export declare const B2CTrustedHostList: object;
/**
 * @hidden
 */
export declare class B2cAuthority extends Authority {
    static B2C_PREFIX: String;
    constructor(authority: string, validateAuthority: boolean, authorityMetadata?: ITenantDiscoveryResponse);
    readonly AuthorityType: AuthorityType;
    /**
     * Returns a promise with the TenantDiscoveryEndpoint
     */
    GetOpenIdConfigurationEndpointAsync(telemetryManager: TelemetryManager, correlationId: string): Promise<string>;
    /**
     * Checks to see if the host is in a list of trusted hosts
     * @param {string} The host to look up
     */
    IsInTrustedHostList(host: string): boolean;
}
